{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pokeg\\\\Documents\\\\cse416\\\\Congressional-district-remapping\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { Map, GeoJSON, TileLayer, FeatureGroup, Circle } from \"react-leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { Row, Col, Form, Button, Tabs, Tab, Table, ListGroup, Accordion, Card, Badge } from \"react-bootstrap\";\nimport L from \"leaflet\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      center: [39.8283, -98.5795],\n      zoom: 4,\n      electionValue: \"\",\n      isLoading: true,\n      geoJson: undefined,\n      USStates: undefined,\n      commentsDisabled: \"red lighten-4 disabled\",\n      resetDisabled: \"\",\n      dataKey: \"\",\n      precinctInfo: \"Please Click a Precinct\",\n      precinctErrors: \"Please Select A State\",\n      key: 'info',\n      comments: [],\n      errorsCount: 0\n    };\n  }\n\n  componentDidMount() {\n    this.loadStates();\n  }\n\n  loadStates() {\n    axios.get(\"http://localhost:8080/api/state\").then(response => {\n      response.data.forEach(state => state.geojson = JSON.parse(state.geojson));\n      var x = {\n        type: \"FeatureCollection\",\n        features: response.data.map(state => state.geojson)\n      };\n      this.setState({\n        USStates: x,\n        geoJson: x,\n        isLoading: false\n      });\n    });\n  }\n\n  checkIfError(r) {\n    if (r.properties.NAME !== undefined && r.properties.NAME.startsWith(\"Precinct\")) {\n      if (r.properties.ERRORS.length !== 0) {\n        return {\n          color: \"red\"\n        };\n      }\n    }\n  }\n\n  highlightFeature(e) {\n    var layer = e.target;\n    if (layer.feature.information) this.createInformation(layer.feature.properties, layer.feature.information);\n  }\n\n  onEachFeature(feature, layer) {\n    layer.on({\n      // mouseover: this.highlightFeature.bind(this),\n      // mouseout: this.resetHighlight.bind(this),\n      click: this.clickToFeature.bind(this)\n    });\n  }\n\n  clickToFeature(e) {\n    console.log(e);\n    var layer = e.target;\n    var name = layer.feature.properties.NAME;\n\n    if (name === undefined) {\n      let precinct = {\n        NAME: \"Default\"\n      };\n      let info = {\n        population: 800,\n        votes: {\n          winner: \"John Doe\",\n          party: \"OTHER\",\n          votes: 421\n        },\n        demo: {\n          white: 400,\n          black: 200,\n          asian: 50,\n          hispanic: 100,\n          other: 50\n        }\n      };\n      this.createInformation(precinct, info);\n      this.highlightNeighbors();\n    } else {\n      this.setCenter(name);\n      this.setState({\n        isLoading: true\n      });\n      axios.get(\"http://localhost:8080/api/precinct/state/\" + layer.feature.properties.ABBR).then(response => {\n        response.data.forEach(state => state.geojson = JSON.parse(state.geojson));\n        var x = {\n          type: \"FeatureCollection\",\n          features: response.data.map(state => state.geojson)\n        };\n        this.setState({\n          geoJson: x,\n          isLoading: false\n        });\n      });\n    }\n\n    console.log(this.refs);\n    this.setState({\n      key: \"info\"\n    }); // Assumming you have a Leaflet map accessible\n  }\n\n  highlightNeighbors() {\n    console.log(\"Highlight Neighbors Called\");\n  }\n\n  createInformation(precinct, information) {\n    var temp = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Name:\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, precinct.NAME)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Total Population:\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, information.population)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Winner:\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, information.votes.winner)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Party:\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, information.votes.party)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"White Population:\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, information.demo.white)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Black Population:\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, information.demo.black)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Asian Population:\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, information.demo.asian)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Hispanic Population:\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, information.demo.hispanic)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Other Population:\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, information.demo.other)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Sources: \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://www.census.gov/quickfacts/CA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"https://www.census.gov/quickfacts/CA\"))))));\n    this.setState({\n      precinctInfo: temp\n    });\n  }\n\n  setCenter(name) {\n    if (name == null) {\n      this.setState({\n        center: [39.8283, -98.5795],\n        zoom: 4,\n        electionValue: \"\",\n        precinctInfo: \"Please Click a Precinct\",\n        precinctErrors: \"Please Select A State\",\n        errorsCount: 0\n      });\n    } else if (name === \"California\") {\n      this.loadErrors(name);\n      this.setState({\n        center: [37.0958, -119.2658],\n        zoom: 6,\n        electionValue: 1,\n        commentsDisabled: \"red lighten-4\",\n        resetDisabled: \"red lighten-4\"\n      });\n    } else if (name === \"Utah\") {\n      this.loadErrors(name);\n      this.setState({\n        center: [39.2302, -111.4101],\n        zoom: 7,\n        electionValue: 1,\n        commentsDisabled: \"red lighten-4\",\n        resetDisabled: \"red lighten-4\"\n      });\n    } else if (name === \"West Virginia\") {\n      this.loadErrors(name);\n      this.setState({\n        center: [38.8509, -80.4202],\n        zoom: 7,\n        electionValue: 1,\n        commentsDisabled: \"red lighten-4\",\n        resetDisabled: \"red lighten-4\"\n      });\n    }\n  }\n\n  setCenterError(center, zoom) {\n    let x = [center[0][1], center[0][0]];\n    this.setState({\n      center: x,\n      zoom\n    });\n  }\n\n  loadErrors(name) {\n    this.setState({\n      precinctErrors: \"No errors available for \" + name + \".\"\n    });\n    console.log(\"Load Errors Called\");\n  }\n\n  changeOfState(e) {\n    var state = e.target.value;\n\n    if (state === \"1\") {\n      this.setCenter(\"California\");\n    } else if (state === \"2\") {\n      this.setCenter(\"Utah\");\n    } else if (state === \"3\") {\n      this.setCenter(\"West Virginia\");\n    }\n  }\n\n  resetClicked() {\n    this.setCenter(null);\n    this.setState({\n      isLoading: true\n    });\n    this.setState({\n      geoJson: this.state.USStates,\n      isLoading: false\n    });\n  }\n\n  changeOfElection(e) {\n    let electionValue = e.target.value;\n    this.setState({\n      electionValue\n    });\n  }\n\n  checkBoxChange(e) {\n    if (e.target.id === \"nationalParks\") {\n      if (e.target.checked === false) {\n        console.log(\"National Parks Disabled\");\n      } else {\n        console.log(\"National Parks Enabled\");\n      }\n    } else if (e.target.id === \"districtBounds\") {\n      if (e.target.checked === false) {\n        console.log(\"Congressional Bounds Disabled\");\n      } else {\n        console.log(\"Congressional Bounds Enabled\");\n      }\n    }\n  }\n\n  submitComment() {\n    console.log(\"Submit Comment Called\");\n  }\n\n  render() {\n    return React.createElement(Row, {\n      className: \"h-100\",\n      noGutters: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      className: \"p-1\",\n      id: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      activeKey: this.state.key,\n      onSelect: key => this.setState({\n        key\n      }),\n      transition: false,\n      className: \"mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"info\",\n      title: \"Information\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, this.state.precinctInfo), React.createElement(Tab, {\n      eventKey: \"err\",\n      title: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Errors \", React.createElement(Badge, {\n        variant: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, this.state.errorsCount)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, this.state.precinctErrors))), React.createElement(Tab, {\n      eventKey: \"comment\",\n      title: \"Comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Add Comment\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"2\",\n      className: \"mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(Accordion, {\n      defaultActiveKey: \"-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      eventKey: \"0\",\n      as: Button,\n      variant: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Show Comments...\"), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"03/01/2020 3:29PM\"), \"The precinct population data needs to be updated for 2020 census.\"), React.createElement(Card, {\n      body: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"02/20/2019 11:02PM\"), \"Congressional results are inaccurate for 2016 in West Virginia.\"), React.createElement(Card, {\n      body: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"02/12/2019 06:45PM\"), \"I like this application.\"))))), React.createElement(Tab, {\n      eventKey: \"edit\",\n      title: \"Tools\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Map Control Tools\"), React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      onChange: this.checkBoxChange,\n      defaultChecked: false,\n      id: \"nationalParks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"nationalParks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Enable/Disable National Parks\")), React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      onChange: this.checkBoxChange,\n      defaultChecked: false,\n      id: \"districtBounds\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"districtBounds\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Enable/Disable District Boundaries\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Data Correction Tools\"), React.createElement(Button, {\n      block: true,\n      onClick: e => new L.Draw.Polyline(this.refs.map.leafletElement).enable(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Add Edge\"), \" Add an edge between two precincts.\"), React.createElement(\"div\", {\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Button, {\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Combine Precinct\"), \" Combine two existing precincts into one.\"), React.createElement(\"div\", {\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Button, {\n      block: true,\n      onClick: e => new L.Draw.Polygon(this.refs.map.leafletElement).enable(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Generate Ghost Precinct\"), \" Create a ghost precinct in case an area where the geographic union of precincts does not fully cover the area of the state\")))), React.createElement(Col, {\n      xs: 8,\n      className: \"h-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Map, {\n      id: \"leaflet-map\",\n      center: this.state.center,\n      zoom: this.state.zoom,\n      ref: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(FeatureGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(EditControl, {\n      position: \"topleft\",\n      onEdited: this._onEditPath,\n      onCreated: this._onCreate,\n      onDeleted: this._onDeleted,\n      draw: {\n        rectangle: false,\n        circle: false,\n        circlemarker: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(Circle, {\n      center: [51.51, -0.06],\n      radius: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })), React.createElement(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), !this.state.isLoading ? React.createElement(GeoJSON, {\n      key: this.state.dataKey,\n      data: this.state.geoJson,\n      style: this.checkIfError.bind(this),\n      onEachFeature: this.onEachFeature.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }) : null), React.createElement(\"div\", {\n      className: \"leaflet-right leaflet-top\",\n      style: {\n        \"pointerEvents\": \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Form, {\n      inline: true,\n      className: \"m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      placeholder: \"Select one\",\n      className: \"mr-2\",\n      value: this.state.stateValue,\n      onChange: this.changeOfState.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \" Select State\"), React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"California\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Utah\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"West Virginia\")), React.createElement(Form.Control, {\n      as: \"select\",\n      className: \"mr-2\",\n      onChange: this.changeOfElection.bind(this),\n      value: this.state.electionValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Select Election\"), React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"2016 Presidential\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"2016 Congressional\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"2018 Congressional\")), React.createElement(Button, {\n      className: \"ml-auto\",\n      onClick: this.resetClicked.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Reset\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/pokeg/Documents/cse416/Congressional-district-remapping/frontend/src/App.js"],"names":["React","Component","Map","GeoJSON","TileLayer","FeatureGroup","Circle","EditControl","axios","Row","Col","Form","Button","Tabs","Tab","Table","ListGroup","Accordion","Card","Badge","L","App","state","center","zoom","electionValue","isLoading","geoJson","undefined","USStates","commentsDisabled","resetDisabled","dataKey","precinctInfo","precinctErrors","key","comments","errorsCount","componentDidMount","loadStates","get","then","response","data","forEach","geojson","JSON","parse","x","type","features","map","setState","checkIfError","r","properties","NAME","startsWith","ERRORS","length","color","highlightFeature","e","layer","target","feature","information","createInformation","onEachFeature","on","click","clickToFeature","bind","console","log","name","precinct","info","population","votes","winner","party","demo","white","black","asian","hispanic","other","highlightNeighbors","setCenter","ABBR","refs","temp","loadErrors","setCenterError","changeOfState","value","resetClicked","changeOfElection","checkBoxChange","id","checked","submitComment","render","Draw","Polyline","leafletElement","enable","Polygon","_onEditPath","_onCreate","_onDeleted","rectangle","circle","circlemarker","stateValue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Map, GeoJSON, TileLayer, FeatureGroup, Circle } from \"react-leaflet\";\r\nimport { EditControl } from \"react-leaflet-draw\"\r\nimport \"./App.css\";\r\nimport axios from \"axios\"\r\nimport { Row, Col, Form, Button, Tabs, Tab, Table, ListGroup, Accordion, Card, Badge } from \"react-bootstrap\"\r\nimport L from \"leaflet\"\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    center: [39.8283, -98.5795],\r\n    zoom: 4,\r\n    electionValue: \"\",\r\n    isLoading: true,\r\n    geoJson: undefined,\r\n    USStates: undefined,\r\n    commentsDisabled: \"red lighten-4 disabled\",\r\n    resetDisabled: \"\",\r\n    dataKey: \"\",\r\n    precinctInfo: \"Please Click a Precinct\",\r\n    precinctErrors: \"Please Select A State\",\r\n    key: 'info',\r\n    comments: [],\r\n    errorsCount: 0\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadStates();\r\n  }\r\n\r\n  loadStates() {\r\n    axios.get(\"http://localhost:8080/api/state\").then((response) => {\r\n      response.data.forEach(state => state.geojson = JSON.parse(state.geojson))\r\n      var x = {type: \"FeatureCollection\", features: response.data.map(state => state.geojson)};\r\n      this.setState({ USStates: x, geoJson: x, isLoading: false});\r\n    });\r\n  }\r\n\r\n  checkIfError(r) {\r\n    if (r.properties.NAME !== undefined && r.properties.NAME.startsWith(\"Precinct\")) {\r\n      if (r.properties.ERRORS.length !== 0) {\r\n        return { color: \"red\" };\r\n      }\r\n    }\r\n  }\r\n  highlightFeature(e) {\r\n    var layer = e.target;\r\n    if (layer.feature.information)\r\n      this.createInformation(layer.feature.properties, layer.feature.information);\r\n  }\r\n\r\n  onEachFeature(feature, layer) {\r\n    layer.on({\r\n      // mouseover: this.highlightFeature.bind(this),\r\n      // mouseout: this.resetHighlight.bind(this),\r\n      click: this.clickToFeature.bind(this)\r\n    });\r\n  }\r\n\r\n  clickToFeature(e) {\r\n    console.log(e)\r\n    var layer = e.target;\r\n    var name = layer.feature.properties.NAME;\r\n    if (name === undefined) {\r\n      let precinct = {NAME: \"Default\"}\r\n      let info = {population: 800, votes: {winner: \"John Doe\", party: \"OTHER\", votes: 421}, demo: {white: 400, black: 200, asian: 50, hispanic: 100, other: 50}}\r\n      this.createInformation(precinct, info);\r\n      this.highlightNeighbors();\r\n    } else{\r\n      this.setCenter(name);\r\n      this.setState({isLoading: true})\r\n      axios.get(\"http://localhost:8080/api/precinct/state/\" + layer.feature.properties.ABBR).then((response) => {\r\n        response.data.forEach(state => state.geojson = JSON.parse(state.geojson))\r\n        var x = {type: \"FeatureCollection\", features: response.data.map(state => state.geojson)};\r\n        this.setState({ geoJson: x, isLoading: false});\r\n      });\r\n    }\r\n    console.log(this.refs)\r\n    this.setState({ key: \"info\" })\r\n    // Assumming you have a Leaflet map accessible\r\n  }\r\n\r\n  highlightNeighbors() {\r\n    console.log(\"Highlight Neighbors Called\");\r\n  }\r\n\r\n  createInformation(precinct, information) {\r\n    var temp =\r\n      <div>\r\n        <Table striped hover>\r\n          <tbody>\r\n            <tr>\r\n              <td><strong>Name:</strong></td>\r\n              <td>{precinct.NAME}</td>\r\n            </tr>\r\n            <tr>\r\n              <td><strong>Total Population:</strong></td>\r\n              <td>{information.population}</td>\r\n            </tr>\r\n            <tr>\r\n              <td><strong>Winner:</strong></td>\r\n              <td>{information.votes.winner}</td>\r\n            </tr>\r\n            <tr>\r\n              <td><strong>Party:</strong></td>\r\n              <td>{information.votes.party}</td>\r\n            </tr>\r\n            <tr>\r\n              <td><strong>White Population:</strong></td>\r\n              <td>{information.demo.white}</td>\r\n            </tr>\r\n            <tr>\r\n              <td><strong>Black Population:</strong></td>\r\n              <td>{information.demo.black}</td>\r\n            </tr>\r\n            <tr>\r\n              <td><strong>Asian Population:</strong></td>\r\n              <td>{information.demo.asian}</td>\r\n            </tr>\r\n            <tr>\r\n              <td><strong>Hispanic Population:</strong></td>\r\n              <td>{information.demo.hispanic}</td>\r\n            </tr>\r\n            <tr>\r\n              <td><strong>Other Population:</strong></td>\r\n              <td>{information.demo.other}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Sources: </td>\r\n              <td><a href=\"https://www.census.gov/quickfacts/CA\">https://www.census.gov/quickfacts/CA</a></td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    this.setState({ precinctInfo: temp });\r\n  }\r\n\r\n  setCenter(name) {\r\n    if (name == null) {\r\n      this.setState({ center: [39.8283, -98.5795], zoom: 4, electionValue: \"\", precinctInfo: \"Please Click a Precinct\", precinctErrors: \"Please Select A State\", errorsCount: 0 });\r\n    } else if (name === \"California\") {\r\n      this.loadErrors(name);\r\n      this.setState({ center: [37.0958, -119.2658], zoom: 6, electionValue: 1, commentsDisabled: \"red lighten-4\", resetDisabled: \"red lighten-4\", });\r\n    } else if (name === \"Utah\") {\r\n      this.loadErrors(name);\r\n      this.setState({ center: [39.2302, -111.4101], zoom: 7, electionValue: 1, commentsDisabled: \"red lighten-4\", resetDisabled: \"red lighten-4\", });\r\n    } else if (name === \"West Virginia\") {\r\n      this.loadErrors(name);\r\n      this.setState({ center: [38.8509, -80.4202], zoom: 7, electionValue: 1, commentsDisabled: \"red lighten-4\", resetDisabled: \"red lighten-4\", });\r\n    }\r\n  }\r\n  setCenterError(center, zoom) {\r\n    let x = [center[0][1], center[0][0]]\r\n    this.setState({ center: x, zoom })\r\n  }\r\n\r\n  loadErrors(name) {\r\n    this.setState({precinctErrors: \"No errors available for \" + name + \".\"});\r\n    console.log(\"Load Errors Called\");\r\n  }\r\n\r\n  changeOfState(e) {\r\n    var state = e.target.value;\r\n    if (state === \"1\") {\r\n      this.setCenter(\"California\");\r\n    } else if (state === \"2\") {\r\n      this.setCenter(\"Utah\");\r\n    } else if (state === \"3\") {\r\n      this.setCenter(\"West Virginia\");\r\n    }\r\n  }\r\n\r\n  resetClicked() {\r\n    this.setCenter(null);\r\n    this.setState({isLoading: true});\r\n    this.setState({geoJson: this.state.USStates, isLoading: false});\r\n\r\n  }\r\n\r\n  changeOfElection(e) {\r\n    let electionValue = e.target.value;\r\n    this.setState({ electionValue });\r\n  }\r\n\r\n  checkBoxChange(e) {\r\n    if (e.target.id === \"nationalParks\") {\r\n      if (e.target.checked === false) {\r\n        console.log(\"National Parks Disabled\");\r\n      } else {\r\n        console.log(\"National Parks Enabled\");\r\n      }\r\n    } else if (e.target.id === \"districtBounds\") {\r\n      if (e.target.checked === false) {\r\n        console.log(\"Congressional Bounds Disabled\");\r\n      } else {\r\n        console.log(\"Congressional Bounds Enabled\");\r\n      }\r\n    }\r\n  }\r\n\r\n  submitComment() {\r\n    console.log(\"Submit Comment Called\");\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Row className=\"h-100\" noGutters={true}>\r\n        <Col xs={4} className=\"p-1\" id=\"sidebar\" >\r\n          <Tabs activeKey={this.state.key} onSelect={key => this.setState({ key })} transition={false} className=\"mb-2\">\r\n            <Tab eventKey=\"info\" title=\"Information\" >\r\n              {this.state.precinctInfo}\r\n            </Tab>\r\n            <Tab eventKey=\"err\" title={<div>Errors <Badge variant=\"danger\">{this.state.errorsCount}</Badge></div>}>\r\n              <div>\r\n                <ListGroup>\r\n                  {this.state.precinctErrors}\r\n                </ListGroup>\r\n              </div>\r\n            </Tab>\r\n            <Tab eventKey=\"comment\" title=\"Comments\">\r\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\" className=\"p-2\">\r\n                <Form.Label>Add Comment</Form.Label>\r\n                <Form.Control as=\"textarea\" rows=\"2\" className=\"mb-2\" />\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form.Group>\r\n              <Accordion defaultActiveKey=\"-1\">\r\n                <Accordion.Toggle eventKey=\"0\" as={Button} variant=\"link\">Show Comments...</Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <div>\r\n                    <Card body>\r\n                      <h6>03/01/2020 3:29PM</h6>The precinct population data needs to be updated for 2020 census.\r\n                    </Card>\r\n                    <Card body>\r\n                      <h6>02/20/2019 11:02PM</h6>\r\n                      Congressional results are inaccurate for 2016 in West Virginia.\r\n                    </Card>\r\n                    <Card body>\r\n                      <h6>02/12/2019 06:45PM</h6>\r\n                      I like this application.\r\n                    </Card>\r\n                  </div>\r\n                </Accordion.Collapse>\r\n              </Accordion>\r\n\r\n            </Tab>\r\n            <Tab eventKey=\"edit\" title=\"Tools\">\r\n              <div className=\"mb-4\">\r\n                <h2>Map Control Tools</h2>\r\n                <div className=\"custom-control custom-checkbox\">\r\n                  <input type=\"checkbox\" className=\"custom-control-input\" onChange={this.checkBoxChange} defaultChecked={false} id=\"nationalParks\"></input>\r\n                  <label className=\"custom-control-label\" htmlFor=\"nationalParks\">Enable/Disable National Parks</label>\r\n                </div>\r\n                <div className=\"custom-control custom-checkbox\">\r\n                  <input type=\"checkbox\" className=\"custom-control-input\" onChange={this.checkBoxChange} defaultChecked={false} id=\"districtBounds\"></input>\r\n                  <label className=\"custom-control-label\" htmlFor=\"districtBounds\">Enable/Disable District Boundaries</label>\r\n                </div><h2>Data Correction Tools</h2>\r\n                <Button block onClick={e => new L.Draw.Polyline(this.refs.map.leafletElement).enable()}>Add Edge</Button> Add an edge between two precincts.\r\n                </div>\r\n              <div className=\"mb-4\">\r\n                <Button block>Combine Precinct</Button> Combine two existing precincts into one.\r\n                </div>\r\n              <div className=\"mb-4\">\r\n                <Button block onClick={e => new L.Draw.Polygon(this.refs.map.leafletElement).enable()}>Generate Ghost Precinct</Button> Create a ghost precinct in case an area where the geographic union of precincts does not fully cover the area of the state\r\n                </div>\r\n            </Tab>\r\n          </Tabs>\r\n        </Col>\r\n        <Col xs={8} className=\"h-100\">\r\n          <Map id=\"leaflet-map\" center={this.state.center} zoom={this.state.zoom} ref=\"map\">\r\n            <FeatureGroup>\r\n              <EditControl\r\n                position='topleft'\r\n                onEdited={this._onEditPath}\r\n                onCreated={this._onCreate}\r\n                onDeleted={this._onDeleted}\r\n                draw={{\r\n                  rectangle: false,\r\n                  circle: false,\r\n                  circlemarker: false\r\n                }}\r\n              />\r\n              <Circle center={[51.51, -0.06]} radius={200} />\r\n            </FeatureGroup>\r\n            <TileLayer\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            {!this.state.isLoading ? (<GeoJSON key={this.state.dataKey} data={this.state.geoJson} style={this.checkIfError.bind(this)} onEachFeature={this.onEachFeature.bind(this)}></GeoJSON>): null}\r\n          </Map>\r\n          <div className=\"leaflet-right leaflet-top\" style={{ \"pointerEvents\": \"auto\" }}>\r\n            <Form inline className=\"m-2\">\r\n              <Form.Control as=\"select\" placeholder=\"Select one\" className=\"mr-2\"\r\n                value={this.state.stateValue}\r\n                onChange={this.changeOfState.bind(this)}>\r\n                <option value=\"\" disabled> Select State</option>\r\n                <option value=\"1\">California</option>\r\n                <option value=\"2\">Utah</option>\r\n                <option value=\"3\">West Virginia</option>\r\n              </Form.Control>\r\n              <Form.Control as=\"select\" className=\"mr-2\" onChange={this.changeOfElection.bind(this)} value={this.state.electionValue}>\r\n                <option value=\"\" disabled>Select Election</option>\r\n                <option value=\"1\">\r\n                  2016 Presidential</option>\r\n                <option value=\"2\">\r\n                  2016 Congressional</option>\r\n                <option value=\"3\">\r\n                  2018 Congressional</option>\r\n              </Form.Control>\r\n              <Button className=\"ml-auto\"\r\n                onClick={this.resetClicked.bind(this)}>Reset</Button>\r\n            </Form>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default App"]},"metadata":{},"sourceType":"module"}